package memberMVC.ex02;

import java.net.URLEncoder;
import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

public class BoardDAO {
	private DataSource dataFactory;
	private Connection conn;
	private PreparedStatement pstmt;
	
	public BoardDAO() {
		try {
			Context ctx=new InitialContext();
			Context envContext=(Context)ctx.lookup("java:/comp/env");//데이터 베이스 환경조성 구성
			dataFactory=(DataSource)envContext.lookup("jdbc/oracle");//oracle말고 mySQL 연결해도 되고 등등... 
		}catch(Exception e) {
			System.out.println("DB 연결 오류");
		}
	}
	//글전체 목록 메서드
	public List<ArticleVO> selectAllArticles() {
		List<ArticleVO> articleList=new ArrayList();
		try {
			conn=dataFactory.getConnection();
			//오라클 계층형 SQL문을 실행
			String query="select LEVEL, articleNo, parentNo, title, content, id, writeDate"
					+ " from boardtbl START WITH parentNo=0 CONNECT BY PRIOR"
					+ " articleNo=parentNo ORDER SIBLINGS BY articleNo DESC";//articleNo=parentNo << 댓글남긴거
			System.out.println(query);
			pstmt=conn.prepareStatement(query);
			ResultSet rs=pstmt.executeQuery();
			while(rs.next()) {
				int level=rs.getInt("level"); //각 글의 깊이(계층) level 속성을 지정
				int articleNo=rs.getInt("articleNo");//글 번호는 숫자
				int parentNo=rs.getInt("parentNo");
				String title=rs.getString("title");
				String content=rs.getString("content");
				String id=rs.getString("id");
				Date writeDate=rs.getDate("writeDate");
				ArticleVO article=new ArticleVO();//글정보를 ArticleVO에 설정
				article.setLevel(level);
				article.setArticleNo(articleNo);
				article.setParentNo(parentNo);
				article.setTitle(title);
				article.setContent(content);
				article.setId(id);
				article.setWriteDate(writeDate);
				articleList.add(article);
			}
			rs.close();
			pstmt.close();
			conn.close();
		}catch(Exception e) {
			System.out.println("글목록 조회중 에러");
		}
		return articleList;
	}
	
	//글 번호 생성 메서드
	private int getNewArticleNo() {//이 클래스에서만 쓸거라 private
		try {
			conn=dataFactory.getConnection();
			String query="select max(articleNo) from boardtbl";
			System.out.println(query);
			pstmt=conn.prepareStatement(query);
			ResultSet rs=pstmt.executeQuery(query);
			if(rs.next()) {//while은 필요없음. 하나만 받을거라.
				return (rs.getInt(1)+1);//pstmt는 0부터 가져오는게 아니라 1부터 가져옴. ex>원래 하던 방식은 rs.getString("id"); <<이걸 ?에 따라 rs.getString(1)로 해도 됐었는데 그걸 일케 사용한거임.
			}
			rs.close();
			pstmt.close();
			conn.close();
		}catch(Exception e) {
			System.out.println("글번호 생성중 에러" + e.getMessage());
		}
		return 0;                                                
	}
	
	//새 글 추가 메서드
	public int insertNewArticle(ArticleVO article) {
		int articleNo=getNewArticleNo();//DB연결과 관계없어서 try에서 빼줌.
		try {
			conn=dataFactory.getConnection();
			int parentNo=article.getParentNo();
			String title=article.getTitle();
			String content=article.getContent();
			String id=article.getId();
			String imageFileName=article.getImageFileName();
			String query="insert into boardtbl(articleNo, parentNo, title, content, imageFileName, id) values(?,?,?,?,?,?)";
			System.out.println(query);
			pstmt=conn.prepareStatement(query);
			pstmt.setInt(1, articleNo);
			pstmt.setInt(2, parentNo);
			pstmt.setString(3, title);
			pstmt.setString(4, content);
			pstmt.setString(5, imageFileName);
			pstmt.setString(6, id);
			pstmt.executeUpdate();
			pstmt.close();
			conn.close();
		}catch(Exception e) {
			System.out.println("새 글 추가중 에러");
		}
		return articleNo;
	}
	
	//선택된 글 상세 내용
	public ArticleVO selectArticle(int articleNo) {
		ArticleVO article=new ArticleVO();
		try {//DB라서 트라이 캐치가 필요함. DB연결이 안될 수도있기때문
			conn=dataFactory.getConnection();
			String query="select articleNo, parentNo, title, content, NVL(imageFileName,'null'), id, writeDate from boardtbl where articleNo=?";
			//NVL은 imageFileName에 값이 있으면 imageFileName값을 넣어주고 없으면 'null'이란 문자를 출력
			System.out.println(query);
			pstmt=conn.prepareStatement(query);
			pstmt.setInt(1, articleNo);
			ResultSet rs=pstmt.executeQuery();
			rs.next();
			int _articleNo=rs.getInt("articleNo");
			int parentNo=rs.getInt("parentNo");
			String title=rs.getString("title");
			String content=rs.getString("content");
			String imageFileName=URLEncoder.encode(rs.getString("imageFileName"),"utf-8");//파일이름에 한글이나 특수문자가 있을경우에 인코딩해주겠다.
			String id=rs.getString("id");
			Date writeDate=rs.getDate("writeDate");
			//ArticleVO에 저장
			article.setArticleNo(_articleNo);
			article.setParentNo(parentNo);
			article.setTitle(title);
			article.setContent(content);
			article.setImageFileName(imageFileName);
			article.setId(id);
			article.setWriteDate(writeDate);
			rs.close();
			pstmt.close();
			conn.close();
		}catch(Exception e) {
			System.out.println("글 상세 구현 중 에러 : "+e.getMessage());
		}
		return article;
	}
	
}
